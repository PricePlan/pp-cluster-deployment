#---------------------------------------------------------------------
# See the full configuration options online.
#
#   https://www.haproxy.org/download/1.8/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
  log         /dev/log local0 info
  chroot      {{ haproxy_chroot_dir }}
  pidfile     /var/run/haproxy.pid
  maxconn     4096
  user        haproxy
  group       haproxy
  daemon

  # turn on stats unix socket
  stats socket /var/lib/haproxy/stats

  # utilize system-wide crypto-policies
  ssl-default-bind-ciphers PROFILE=SYSTEM
  ssl-default-server-ciphers PROFILE=SYSTEM


frontend http
  bind :8080
  default_backend stats

backend stats
  mode http
  stats enable

  stats enable
  stats uri /
  stats refresh 1s
  stats show-legends
  stats admin if TRUE

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
  mode                    tcp
  log                     global
  # option                  httplog
  option                  dontlognull
  # option http-server-close
  # option forwardfor       except 127.0.0.0/8
  option                  redispatch
  retries                 3
  timeout http-request    10s
  timeout queue           1m
  timeout connect         10s
  timeout client          1m
  timeout server          1m
  timeout http-keep-alive 10s
  timeout check           {{ haproxy_timeout_check }}s
  maxconn                 512

#---------------------------------------------------------------------
# frontend for PostgreSQL (via PgBouncer)
#---------------------------------------------------------------------
frontend postgres_front
  mode tcp
  bind *:{{ haproxy_frontend_pg_port }}
  use_backend postgres_back

#---------------------------------------------------------------------
# frontend for Redis
#---------------------------------------------------------------------
frontend redis_front
  mode tcp
  bind *:{{ haproxy_frontend_redis_port }}
  use_backend redis_back

#---------------------------------------------------------------------
# backend for PgBouncer with check Patroni status
#---------------------------------------------------------------------
backend postgres_back
  timeout connect 4s
  timeout check 5s

  option httpchk
  http-check expect status 200

  default-server inter 3s fall 3 rise 2

{% for host, ip in cluster.items() %}
  server {{ host }} {{ ip }}:{{ postgres_port }} maxconn 512 check port 8008
{% endfor %}

#---------------------------------------------------------------------
# backend for Redis
#---------------------------------------------------------------------
backend redis_back
  mode tcp
  balance first

  # timeout connect 3s
  # timeout check 5s

  option tcp-check

  tcp-check send info\ replication\r\n
	tcp-check expect string role:master

  {# tcp-check connect
  tcp-check send PING\r\n
  tcp-check expect string +PONG
  tcp-check send info\ replication\r\n
  tcp-check expect string role:master
  tcp-check send QUIT\r\n
  tcp-check expect string +OK #}

  # default-server inter 3s fall 3 rise 2

  {% for host, ip in cluster.items() %}
  server {{ host }} {{ ip }}:{{ redis_port }} maxconn 512 check inter 1s
  {% endfor %}

  # check inter 3s
