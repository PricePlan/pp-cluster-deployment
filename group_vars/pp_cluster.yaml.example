### Variables of 'pp_cluster' group
---
### Etcd
etcd_cluster_name: pp-etcd-cluster

### PostgreSQL
postgres_version: '12'

postgres_package_profiles:
  - '@postgresql:{{ postgres_version }}/server'
  - '@postgresql:{{ postgres_version }}/client'

postgres_port: '5432'
postgres_encoding: UTF8  # for bootstrap only (initdb)
postgres_locale: en_US.UTF-8  # for bootstrap only (initdb)
postgres_data_checksums: true  # for bootstrap only (initdb)

postgres_home: /opt/PG
postgres_data_dir: '{{ postgres_home }}/{{ postgres_version }}/data'
postgres_conf_dir: '{{ postgres_data_dir }}'
postgres_bin_dir: /usr/bin
postgres_unix_socket_dir: /var/run/postgresql

### Patroni
pves_home: /opt/pves
postgres_cluster_name: pp-pgcluster

patroni_pgpass: '{{ postgres_home }}/patroni_pgpass'
patroni_superuser_username: postgres
patroni_superuser_password: 'postgres_passwd'  # Change it!
patroni_replication_username: replicator
patroni_replication_password: 'replicator_passwd'  # Change it!
patroni_rewind_username: rewinder
patroni_rewind_password: 'rewinder_passwd'  # Change it!

patroni_ttl: 30
patroni_loop_wait: 10
patroni_retry_timeout: 10
patroni_maximum_lag_on_failover: 1048576
patroni_master_start_timeout: 300
patroni_postgres_use_pg_rewind: true

etcd_hosts_ports: '[{% for host, ip in cluster.items() %}"{{ ip }}:2379"{% if not loop.last %},{% endif %}{% endfor %}]'

### PgBouncer
pgbouncer_listen_port: 6432

### HAProxy
haproxy_frontend_pg_port: 7432
haproxy_frontend_redis_port: 7379

### Redis
redis_sentinel_password: 'VeryLongPasswordAsReidisIsFast' # Change it!
redis_replica_password: 'VeryLongPasswordAsReidisIsFast'  # Change it!
redis_master: pp-master
redis_master_index: 1
redis_hosts: '{{ cluster.keys() | list }}'
redis_master_host: '{{ redis_hosts[redis_master_index] }}'
redis_master_ip: '{{ cluster[redis_master_host] }}'

### RabbitMQ
rabbitmq_etc_hosts: '{{ cluster }}'

amqp_user: priceplan
amqp_password: 'priceplan_amqp_passwd' # Change it!

rabbitmq_default_vhost: priceplan
rabbitmq_cluster_name: pp_mq
rabbit_auth_cookie: 'ThisIsAnErlangCookieInRealy' # Change it!
rabbitmq_hosts: '{{ cluster.keys() | list }}'

### Nginx
dns_servers:
  - 77.88.8.8
  - 8.8.8.8

### Elasticsearch
elk_version: 7.9.1
elasticsearch_in_cluster: true
elasticsearch_cluster_name: pp-elk-cluster
elasticsearch_etc_hosts: '{{ cluster }}'
elasticsearch_hosts: '[{% for host, ip in cluster.items() %}"http://{{ ip }}"{% if not loop.last %},{% endif %}{% endfor %}]'
initial_master_nodes: '[{% for host, ip in cluster.items() %}"{{ host }}"{% if not loop.last %},{% endif %}{% endfor %}]'

### Logstash
logstash_etc_hosts: '{{ cluster }}'

### Kibana
kibana_users: # Change it!
  - username: kadmin
    password: kadmin_password

### Webfront
web_domain_name: tl.dr # Change it!
pp_http_hostname: 'billing.{{ web_domain_name }}'

### PricePlan
pp_postgres_db: priceplan
pp_postgres_user: priceplan
pp_postgres_password: 'PP_DB_Secret' # Change it!

postgres_users:
  - name: '{{ pp_postgres_user }}'
    password: '{{ pp_postgres_password }}'
    privs: 'CREATEDB,LOGIN'

postgres_databases:
  - db: '{{ pp_postgres_db }}'
    owner: '{{ pp_postgres_user }}'
    lc_collate: 'ru_RU.UTF-8'
    lc_ctype: 'ru_RU.UTF-8'

docker_registry: docker.io
registry_user: docker_user  # Change it!
registry_password: 'docker_password' # Change it!
pp_image_version: 1.15.22

# Run to generate:
# $ echo $(base64 /dev/urandom | head -c50)
pp_secret_key: 'qGropa6rNBTppqCCrrGpdrs5+M7Xwkighz54cmv5/yyHj+yt0D' # Change it!

### misc
timezone: 'Europe/Moscow'
disable_thp: true
docker_pull: true
deep: false
sites_home: /opt/sites
static_home: '{{ sites_home }}/static'

settings_module_name: dataspace
