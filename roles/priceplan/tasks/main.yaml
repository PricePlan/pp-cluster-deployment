- name: ensure settings is up to date
  become: yes
  template:
    src: cluster.py.j2
    dest: '{{ sites_home }}/{{ settings_module_name }}.py'
    owner: '{{ pp_uid }}'
    group: '{{ pp_gid }}'
    mode: '0440'
  tags:
    - pp_conf

- name: log into PricePlan registry
  docker_login:
    registry: registry.priceplan.pro
    username: '{{ registry_user }}'
    password: '{{ registry_password }}'
    # reauthorize: yes

- name: run UWSGI
  docker_container:
    name: '{{ pp_uwsgi_container_name }}'
    image: '{{ pp_image_name }}'
    pull: '{{ docker_pull }}'
    state: started
    recreate: yes

    log_driver: '{{ pp_log_driver }}'
    log_options: '{{ pp_log_options }}'
    network_mode: '{{ pp_network_mode }}'

    exposed_ports: []
    published_ports: []
    env: '{{ pp_environment }}'
    links: '{{ pp_links }}'
    volumes: '{{ pp_volumes | default([]) }}'
    restart_policy: always
    command: ["uwsgi", ]
  when: '"uwsgi" in group_names'

- name: run worker for common tasks
  docker_container:
    name: '{{ pp_common_container_name }}'
    image: '{{ pp_image_name }}'
    pull: '{{ docker_pull }}'
    state: started
    recreate: yes

    log_driver: '{{ pp_log_driver }}'
    log_options: '{{ pp_log_options }}'
    network_mode: '{{ pp_network_mode }}'

    exposed_ports: []
    published_ports: []
    env: '{{ pp_environment }}'
    links: '{{ pp_links }}'
    volumes: '{{ pp_volumes | default([]) }}'
    restart_policy: always
    command: ["common", ]
  when: '"common" in group_names'

- name: run worker for billing tasks
  docker_container:
    name: '{{ pp_billing_container_name }}'
    image: '{{ pp_image_name }}'
    pull: '{{ docker_pull }}'
    state: started
    recreate: yes

    log_driver: '{{ pp_log_driver }}'
    log_options: '{{ pp_log_options }}'
    network_mode: '{{ pp_network_mode }}'

    exposed_ports: []
    published_ports: []
    env: '{{ pp_environment }}'
    links: '{{ pp_links }}'
    volumes: '{{ pp_volumes | default([]) }}'
    restart_policy: always
    command: ["billing", ]
  when: '"billing" in group_names'

- name: run worker for client level billing tasks
  docker_container:
    name: '{{ pp_ordinal_container_name }}'
    image: '{{ pp_image_name }}'
    pull: '{{ docker_pull }}'
    state: started
    recreate: yes

    log_driver: '{{ pp_log_driver }}'
    log_options: '{{ pp_log_options }}'
    network_mode: '{{ pp_network_mode }}'

    exposed_ports: []
    published_ports: []
    env: '{{ pp_environment }}'
    links: '{{ pp_links }}'
    volumes: '{{ pp_volumes | default([]) }}'
    restart_policy: always
    command: ["ordinal", ]
  when: '"ordinal" in group_names'

- name: run worker for send mail tasks
  docker_container:
    name: '{{ pp_mail_container_name }}'
    image: '{{ pp_image_name }}'
    pull: '{{ docker_pull }}'
    state: started
    recreate: yes

    log_driver: '{{ pp_log_driver }}'
    log_options: '{{ pp_log_options }}'
    network_mode: '{{ pp_network_mode }}'

    exposed_ports: []
    published_ports: []
    env: '{{ pp_environment }}'
    links: '{{ pp_links }}'
    volumes: '{{ pp_volumes | default([]) }}'
    restart_policy: always
    command: ["mail", ]
  when: '"mail" in group_names'

- name: run worker for http hooks
  docker_container:
    name: '{{ pp_http_container_name }}'
    image: '{{ pp_image_name }}'
    pull: '{{ docker_pull }}'
    state: started
    recreate: yes

    log_driver: '{{ pp_log_driver }}'
    log_options: '{{ pp_log_options }}'
    network_mode: '{{ pp_network_mode }}'

    exposed_ports: []
    published_ports: []
    env: '{{ pp_environment }}'
    links: '{{ pp_links }}'
    volumes: '{{ pp_volumes | default([]) }}'
    restart_policy: always
    command: ["http", ]
  when: '"http" in group_names'

- name: run worker for search tasks
  docker_container:
    name: '{{ pp_search_container_name }}'
    image: '{{ pp_image_name }}'
    pull: '{{ docker_pull }}'
    state: started
    recreate: yes

    log_driver: '{{ pp_log_driver }}'
    log_options: '{{ pp_log_options }}'
    network_mode: '{{ pp_network_mode }}'

    exposed_ports: []
    published_ports: []
    env: '{{ pp_environment }}'
    links: '{{ pp_links }}'
    volumes: '{{ pp_volumes | default([]) }}'
    restart_policy: always
    command: ["search", ]
  when: '"search" in group_names'

- name: run cron worker
  docker_container:
    name: '{{ pp_cron_container_name }}'
    image: '{{ pp_image_name }}'
    pull: '{{ docker_pull }}'
    state: started
    recreate: yes

    log_driver: '{{ pp_log_driver }}'
    log_options: '{{ pp_log_options }}'
    network_mode: '{{ pp_network_mode }}'

    exposed_ports: []
    published_ports: []
    env: '{{ pp_environment }}'
    links: '{{ pp_links }}'
    volumes: '{{ pp_volumes | default([]) }}'
    restart_policy: always
    command: ["master", ]
  when: '"pp_cron" in group_names'

- name: run flower
  docker_container:
    name: '{{ pp_flower_container_name }}'
    image: '{{ pp_image_name }}'
    pull: '{{ docker_pull }}'
    state: started
    recreate: yes

    log_driver: '{{ pp_log_driver }}'
    log_options: '{{ pp_log_options }}'
    network_mode: '{{ pp_network_mode }}'

    exposed_ports: []
    published_ports: []
    env: '{{ pp_environment }}'
    links: '{{ pp_links }}'
    volumes: '{{ pp_volumes | default([]) }}'
    restart_policy: always
    command: ["flower", ]
  when: '"flower" in group_names'

- name: Log out of PricePlan registry
  docker_login:
    registry: registry.priceplan.pro
    state: absent
