# tasks file for dockers/etcd
---
- block:
  # For recreate etcd cluster
  - name: stop an etcd container
    docker_container:
      name: '{{ etcd_container_name }}'
      container_default_behavior: '{{ etcd_default_behavior }}'
      state: stopped

    register: etcd_stopped
    # failed_when: false
    tags: etcd

  - name: drop {{ etcd_home }} directory
    file:
      path: '{{ etcd_home }}'
      state: absent
    tags: etcd

  become: yes
  when: etcd_reinit | default("false")

- block:
  - name: ensure {{ etcd_home }} directory has proper access mode
    file:
      path: '{{ etcd_home }}'
      state: directory
      owner: '{{ etcd_uid }}'
      group: '{{ etcd_gid }}'
      mode: '0700'
    tags: etcd

  - name: ensure {{ etcd_data_dir }} directory has proper access mode
    file:
      path: '{{ etcd_data_dir }}'
      state: directory
      owner: '{{ etcd_uid }}'
      group: '{{ etcd_gid }}'
      mode: '0700'
    tags: etcd

  - name: ensure {{ etcd_wal_dir }} directory has proper access mode
    file:
      path: '{{ etcd_wal_dir }}'
      state: directory
      owner: '{{ etcd_uid }}'
      group: '{{ etcd_gid }}'
      mode: '0700'
    tags: etcd

  - name: 'ensure {{ etcd_conf_dir }} directory exists'
    file:
      path: '{{ etcd_conf_dir }}'
      state: directory
      owner: root
      group: '{{ etcd_gid }}'
      mode: '0755'
    tags: etcd, etcd_conf

  - name: ensure etcd.conf.yaml is up to date
    template:
      src: etcd.conf.yaml.j2
      dest: '{{ etcd_conf_dir }}/etcd.conf.yaml'
      owner: root
      group: '{{ etcd_gid }}'
      mode: '0644'
    tags: etcd, etcd_conf

  become: yes


- name: create an etcd container
  docker_container:
    name: '{{ etcd_container_name }}'
    image: '{{ etcd_image_name }}'
    # | regex_replace("\s", "") }}'
    state: started
    pull: '{{ docker_pull }}'
    recreate: yes

    log_driver: '{{ etcd_log_driver }}'
    log_options: '{{ etcd_log_options }}'
    network_mode: '{{ etcd_network_mode }}'

    exposed_ports: '{{ etcd_ports }}'
    published_ports: '{{ etcd_published_ports }}'
    env: '{{ etcd_environment }}'
    volumes: '{{ etcd_volumes }}'

    restart_policy: always
    container_default_behavior: '{{ etcd_default_behavior }}'
  become: yes
  tags:
    - etcd
    - etcd_container

  register: docker_etcd_installed
